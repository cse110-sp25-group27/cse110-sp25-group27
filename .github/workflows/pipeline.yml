name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write # Allow push access using GITHUB_TOKEN
  pages: write
  id-token: write

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install Dependencies
        run: npm install
      
      - name: Run ESLint
        run: npx eslint . --max-warnings=0 --config eslint.config.js
      
      - name: Run unit tests with coverage
        run: npm run test -- --coverage
      
      - name: Generate Markdown documentation
        run: npm run generate-docs
      
      - name: Commit and push docs/ to coverage-update branch
        shell: bash
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          rm -rf coverage_report || echo "No coverage_report folder to remove"
          git reset --hard
          git clean -fd
          git fetch origin
          if git show-ref --quiet refs/heads/coverage-update; then
            git checkout coverage-update
          else
            git checkout -b coverage-update origin/coverage-update
          fi
          git reset --hard origin/coverage-update
          if [ -d "docs/coverage_report" ]; then
            git add docs/coverage_report/
          else
            echo "docs/coverage_report folder not found; skipping git add"
          fi
          if git diff-index --quiet HEAD --; then
            echo "No changes to commit"
          else
            git commit -m "Update docs and coverage [skip ci]"
            git push origin coverage-update --force
          fi
      
      - name: Debug list docs/coverage_report contents
        run: |
          ls -la docs/coverage_report || echo "docs/coverage_report does not exist"
      
      - name: Create Pull Request for docs and coverage update
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update docs and coverage [skip ci]"
          title: "Update docs and coverage"
          body: "Automated update of docs and coverage reports."
          base: main
          branch: coverage-update
          add-paths: docs/coverage_report/**

  deploy:
    name: Deploy coverage report to GitHub Pages
    runs-on: ubuntu-latest
    needs: tests
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    # Only deploy on pushes to main branch (not on PRs)
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
      
      - name: Regenerate coverage report for deployment
        run: |
          npm install
          npm run test -- --coverage
          npm run generate-docs
      - name: Prepare coverage report for deployment
        run: |
          echo "=== Checking docs structure ==="
          ls -la docs/ || echo "No docs directory"
          echo "=== Checking coverage_report structure ==="
          ls -la docs/coverage_report/ || echo "No coverage_report directory"
          echo "=== Checking for index.html files ==="
          find . -name "index.html" -type f
          
          # Create a .nojekyll file to disable Jekyll processing
          touch docs/coverage_report/.nojekyll
          
          # Check if we have the main index.html
          if [ -f "docs/coverage_report/index.html" ]; then
            echo "✓ Found main index.html"
            head -n 5 docs/coverage_report/index.html
          else
            echo "✗ Main index.html not found"
            # Check if there's an lcov-report directory with index.html
            if [ -f "docs/coverage_report/lcov-report/index.html" ]; then
              echo "Found index.html in lcov-report subdirectory, copying to root"
              cp docs/coverage_report/lcov-report/index.html docs/coverage_report/
              cp -r docs/coverage_report/lcov-report/* docs/coverage_report/
            else
              echo "No index.html found anywhere in coverage_report"
              ls -la docs/coverage_report/
            fi
          fi
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/coverage_report
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  codacy-coverage-reporter:
    name: Upload coverage report to Codacy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ./docs/coverage_report/lcov.info